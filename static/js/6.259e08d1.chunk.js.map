{"version":3,"sources":["components/Pages/Project.js","data/projects.js","components/Pages/ProjectsContainer.js"],"names":["Project","name","status","demourl","repourl","technologies","pictures","projectPreviewClick","className","cssclass","label","draggable","alt","src","onClick","window","open","url","map","technology","i","key","length","picture","style","display","marginBottom","textAlign","projects","Projects","props","context","caption","setState","displayPictureModal","displayPicturesSRC","displayPicturesCaption","projectPictureOnClose","handleSelect","bind","state","index","direction","fade","interval","touch","selectedIndex","e","this","Carousel","activeIndex","onSelect","project","Item","Component"],"mappings":"iMAgEeA,G,MA3DC,SAAC,GAAqF,IAAnFC,EAAkF,EAAlFA,KAAMC,EAA4E,EAA5EA,OAAQC,EAAoE,EAApEA,QAASC,EAA2D,EAA3DA,QAASC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,oBACvE,OACI,yBAAKC,UAAU,qBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBACVP,GAEL,yBAAKO,UAAS,wBAAmBN,EAAOO,WACnCP,EAAOQ,OAGS,WAAjBR,EAAOQ,OACP,yBAAKF,UAAU,eACX,yBAAKA,UAAU,mBACX,yBAAKG,UAAU,QAAQH,UAAU,UAAUI,IAAI,oBAAoBC,IAAG,qBACtE,uBAAGC,QAAS,kBAAMC,OAAOC,KAAKb,EAAQc,IAAK,YAAYd,EAAQO,QAEnE,yBAAKF,UAAU,mBACX,yBAAKG,UAAU,QAAQH,UAAU,UAAUI,IAAI,oBAAoBC,IAAG,qBACtE,uBAAGC,QAAS,kBAAMC,OAAOC,KAAKZ,EAAQa,IAAK,YAAYb,EAAQM,SAI3E,yBAAKF,UAAU,uBACX,yBAAKA,UAAU,yBAEPH,EAAaa,KAAI,SAACC,EAAYC,GAC1B,OAAO,uBAAGC,IAAKD,GAAR,IAAaD,EAAWlB,WAO1B,gBAAjBC,EAAOQ,OAA2BJ,EAASgB,OAAS,GAEpD,yBAAKd,UAAU,mBAEPF,EAASY,KAAI,SAACK,EAASH,GACnB,OACI,yBAAKI,MAAO,CAAEC,QAAS,QAASC,aAAc,OAAQC,UAAW,UAAYN,IAAKD,GAC9E,2BAAIG,EAAQtB,MACZ,yBAAKU,UAAU,QAAQC,IAAKW,EAAQtB,KAAMY,IAAKU,EAAQV,IAAKL,UAAU,wBAAwBM,QAAS,kBAAMP,EAAoBgB,EAAQV,IAAKU,EAAQtB,mBChDrL2B,EAAW,CAAC,CACrB3B,KAAM,kBACNC,OAAQ,CACJO,SAAU,SACVC,MAAO,UAEXP,QAAS,CACLO,MAAO,YACPO,IAAK,kDAETb,QAAS,CACLM,MAAO,aACPO,IAAK,kDAETZ,aAAc,CACV,CACIJ,KAAM,SAEV,CACIA,KAAM,cAEV,CACIA,KAAM,SAEV,CACIA,KAAM,eAEV,CACIA,KAAM,eAEXK,SAAU,IACd,CACCL,KAAM,oBACNC,OAAQ,CACJO,SAAU,SACVC,MAAO,UAEXP,QAAS,CACLO,MAAO,YACPO,IAAK,2CAETb,QAAS,CACLM,MAAO,aACPO,IAAK,2CAETZ,aAAc,CACV,CACIJ,KAAM,SAEV,CACIA,KAAM,cAEV,CACIA,KAAM,SAEV,CACIA,KAAM,eAEV,CACIA,KAAM,aAEXK,SAAU,IACd,CACCL,KAAM,0BACNC,OAAQ,CACJO,SAAU,SACVC,MAAO,eAEXP,QAAS,CACLO,MAAO,cACPO,IAAK,IAETb,QAAS,CACLM,MAAO,cACPO,IAAK,IAETZ,aAAc,CACV,CACIJ,KAAM,YAEV,CACIA,KAAM,cAEV,CACIA,KAAM,UAGdK,SAAU,CACN,CACIL,KAAM,iBACNY,IAAK,8BAET,CACIZ,KAAM,sBACNY,IAAK,iCCrFXgB,E,YACE,WAAYC,EAAOC,GAAU,IAAD,8BACpB,4CAAMD,EAAOC,KAkBrBxB,oBAAsB,SAACM,EAAKmB,GACpB,EAAKC,SAAS,CAAEC,qBAAqB,EAAMC,mBAAoBtB,EAAKuB,uBAAwBJ,KApBxE,EAuB5BK,sBAAwB,WAChB,EAAKJ,SAAS,CAAEC,qBAAqB,KArBrC,EAAKI,aAAe,EAAKA,aAAaC,KAAlB,gBAEpB,EAAKC,MAAQ,CACLC,MAAO,EACPC,UAAW,KACXC,MAAM,EACNC,SAAU,KACVC,OAAO,EACPjB,SAAUA,EACVM,qBAAqB,EACrBC,mBAAoB,GACpBC,uBAAwB,IAdZ,E,0EA4BfU,EAAeC,GACpBC,KAAKf,SAAS,CACNQ,MAAOK,EACPJ,UAAWK,EAAEL,c,0CAKrBM,KAAKf,SAAS,CAAEL,SAAUA,M,+BAGxB,IAAD,SAC6DoB,KAAKR,MAA3DC,EADP,EACOA,MAAOC,EADd,EACcA,UAAWC,EADzB,EACyBA,KAAMC,EAD/B,EAC+BA,SAAUC,EADzC,EACyCA,MAAOjB,EADhD,EACgDA,SACjD,OAAQ,kBAAC,WAAD,KACCoB,KAAKR,MAAMN,qBACJ,yBAAK1B,UAAU,uBACP,0BAAMA,UAAU,sBAAsBM,QAAS,kBAAM,EAAKuB,0BAA1D,QACA,yBAAK1B,UAAU,QAAQE,IAAKmC,KAAKR,MAAML,mBAAoBvB,IAAKoC,KAAKR,MAAMJ,uBAAwB5B,UAAU,mBAC7G,yBAAKA,UAAU,yBAAyBwC,KAAKR,MAAMJ,yBAGnE,yBAAK5B,UAAU,mBACP,kBAACyC,EAAA,EAAD,CACQC,YAAaT,EACbC,UAAWA,EACXC,KAAMA,EACNC,SAAUA,EACVO,SAAUH,KAAKV,aACfO,MAAOA,GACCjB,EAASV,KAAI,SAACkC,EAAShC,GACf,OACQ,kBAAC6B,EAAA,EAASI,KAAV,CAAehC,IAAKD,GACZ,kBAAC,EAAD,CAASnB,KAAMmD,EAAQnD,KAAMC,OAAQkD,EAAQlD,OAAQC,QAASiD,EAAQjD,QAASC,QAASgD,EAAQhD,QAASC,aAAc+C,EAAQ/C,aAAcC,SAAU8C,EAAQ9C,SAAUC,oBAAqB,EAAKA,iC,GA7DpP+C,aA0ERzB","file":"static/js/6.259e08d1.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\n\nimport './Projects.scss';\n\n\nconst Project = ({ name, status, demourl, repourl, technologies, pictures, projectPreviewClick }) => {\n    return (\n        <div className=\"projectBoxWrapper\">\n            <div className=\"innerProjectBox\">\n                <div className=\"innerProjectWrapper\">\n                    <div className=\"projectHeadline\">\n                        {name}\n                    </div>\n                    <div className={`projectStatus ${status.cssclass}`}>\n                        {status.label}\n                    </div>\n                    {\n                        status.label === \"online\" &&\n                        <div className=\"projectURLs\">\n                            <div className=\"projectDemoURLs\">\n                                <img draggable=\"false\" className=\"iconURL\" alt=\"Project Demo Icon\" src={`./icons/demo.png`} />\n                                <p onClick={() => window.open(demourl.url, \"_blank\")}>{demourl.label}</p>\n                            </div>\n                            <div className=\"projectRepoURLs\">\n                                <img draggable=\"false\" className=\"iconURL\" alt=\"Project Repo Icon\" src={`./icons/repo.png`} />\n                                <p onClick={() => window.open(repourl.url, \"_blank\")}>{repourl.label}</p>\n                            </div>\n                        </div>\n                    }\n                    <div className=\"projectTechnologies\">\n                        <div className=\"projectTechnologyList\">\n                            {\n                                technologies.map((technology, i) => {\n                                    return <p key={i}> {technology.name}</p>\n                                })\n                            }\n                        </div>\n                    </div>\n\n                    {\n                        status.label === \"coming soon\" && pictures.length > 0 &&\n\n                        <div className=\"projectPictures\">\n                            {\n                                pictures.map((picture, i) => {\n                                    return (\n                                        <div style={{ display: \"block\", marginBottom: \"20px\", textAlign: \"center\" }} key={i} >\n                                            <p>{picture.name}</p>\n                                            <img draggable=\"false\" alt={picture.name} src={picture.src} className=\"projectPreviewPicture\" onClick={() => projectPreviewClick(picture.src, picture.name)} />\n                                        </div>\n                                    );\n\n                                })\n                            }\n                        </div>\n                    }\n\n                </div>\n            </div>\n        </div >\n    )\n}\n\n\nexport default Project;\n","export const projects = [{\n    name: 'Evening Routine',\n    status: {\n        cssclass: 'online',\n        label: 'online'\n    },\n    demourl: {\n        label: 'Live Demo',\n        url: 'https://cscheffauer.github.io/evening_routine/'\n    },\n    repourl: {\n        label: 'Repository',\n        url: 'https://github.com/cscheffauer/evening_routine'\n    },\n    technologies: [\n        {\n            name: 'React'\n        },\n        {\n            name: 'React.lazy'\n        },\n        {\n            name: 'Redux'\n        },\n        {\n            name: 'Redux-Thunk'\n        },\n        {\n            name: 'MaterialUI'\n        }\n    ], pictures: []\n}, {\n    name: 'Star Wars Figures',\n    status: {\n        cssclass: 'online',\n        label: 'online'\n    },\n    demourl: {\n        label: 'Live Demo',\n        url: 'https://cscheffauer.github.io/starwars/'\n    },\n    repourl: {\n        label: 'Repository',\n        url: 'https://github.com/cscheffauer/starwars'\n    },\n    technologies: [\n        {\n            name: 'React'\n        },\n        {\n            name: 'React.lazy'\n        },\n        {\n            name: 'Redux'\n        },\n        {\n            name: 'Redux-Thunk'\n        },\n        {\n            name: 'Tachyons'\n        }\n    ], pictures: []\n}, {\n    name: 'Newsroom Control System',\n    status: {\n        cssclass: 'inwork',\n        label: 'coming soon'\n    },\n    demourl: {\n        label: 'coming soon',\n        url: ''\n    },\n    repourl: {\n        label: 'coming soon',\n        url: ''\n    },\n    technologies: [\n        {\n            name: 'React.js'\n        },\n        {\n            name: 'React.lazy'\n        },\n        {\n            name: 'Redux'\n        }\n    ],\n    pictures: [\n        {\n            name: 'Rundown Mockup',\n            src: 'pictures/nrcs_preview1.png'\n        },\n        {\n            name: 'Story Editor Mockup',\n            src: 'pictures/nrcs_preview2.png'\n        }\n    ]\n},];","import React, { Component, Fragment } from 'react'\nimport Carousel from 'react-bootstrap/Carousel'\n\nimport Project from './Project'\n\nimport { projects } from '../../data/projects'\n\nimport './Projects.scss';\n\nclass Projects extends Component {\n        constructor(props, context) {\n                super(props, context);\n\n                this.handleSelect = this.handleSelect.bind(this);\n\n                this.state = {\n                        index: 0,\n                        direction: null,\n                        fade: true,\n                        interval: null,\n                        touch: true,\n                        projects: projects,\n                        displayPictureModal: false,\n                        displayPicturesSRC: '',\n                        displayPicturesCaption: ''\n                };\n        }\n\n\n        projectPreviewClick = (src, caption) => {\n                this.setState({ displayPictureModal: true, displayPicturesSRC: src, displayPicturesCaption: caption });\n        }\n\n        projectPictureOnClose = () => {\n                this.setState({ displayPictureModal: false });\n        }\n\n\n        handleSelect(selectedIndex, e) {\n                this.setState({\n                        index: selectedIndex,\n                        direction: e.direction\n                });\n        }\n\n        componentDidMount() {\n                this.setState({ projects: projects })\n        }\n\n        render() {\n                const { index, direction, fade, interval, touch, projects } = this.state;\n                return (<Fragment>\n                        {this.state.displayPictureModal &&\n                                <div className=\"projectPictureModal\">\n                                        <span className=\"projectPictureClose\" onClick={() => this.projectPictureOnClose()}>&times;</span>\n                                        <img draggable=\"false\" src={this.state.displayPicturesSRC} alt={this.state.displayPicturesCaption} className=\"projectPicture\" />\n                                        <div className=\"projectPictureCaption\">{this.state.displayPicturesCaption}</div>\n                                </div>\n                        }\n                        <div className=\"projectOuterBox\" >\n                                <Carousel\n                                        activeIndex={index}\n                                        direction={direction}\n                                        fade={fade}\n                                        interval={interval}\n                                        onSelect={this.handleSelect}\n                                        touch={touch}>{\n                                                projects.map((project, i) => {\n                                                        return (\n                                                                <Carousel.Item key={i}>\n                                                                        <Project name={project.name} status={project.status} demourl={project.demourl} repourl={project.repourl} technologies={project.technologies} pictures={project.pictures} projectPreviewClick={this.projectPreviewClick} />\n                                                                </Carousel.Item>\n                                                        );\n                                                })\n\n                                        }\n                                </Carousel>\n                        </div>\n                </Fragment>\n                )\n        }\n}\n\nexport default Projects;"],"sourceRoot":""}